{"version":3,"sources":["data/index.js","data/Stations.js","components/Player.js","Utils/HelperFunctions.js","App.js","reportWebVitals.js","index.js"],"names":["stations","name","key","Player","station","videoId","opts","vq","width","height","playerVars","autoplay","onReady","event","target","playVideo","style","display","a","fetch","request","json","quotes","Math","floor","random","length","App","useState","quote","setQuote","gifsData","theme","setTheme","currentTheme","setCurrentTheme","setStation","currentIndex","setCurrentIndex","useEffect","fetchQuote","then","data","text","list","i","rand","swap","suffleList","callback","delay","savedCallback","React","useRef","current","id","setInterval","clearInterval","useInterval","className","Main","src","alt","Section","onChange","e","value","find","obj","map","indexOf","Footer","styled","div","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f23f9812.chunk.js","sourcesContent":["export default [\n    'bridge-day.gif',\n    'bridge.gif',\n    'sleepy.gif',\n    'blade.gif',\n    'bluebalcony.gif',\n    'bridge-raining.gif',\n    'cacao_and_coffee_shop.gif',\n    'citymirror.gif',\n    'coast.gif',\n    'coffeeinrain.gif',\n    'comition_sky_left_to_right.gif',\n    'dark_pillar.gif',\n    'drift.gif',\n    'droidcrime.gif',\n    'sleepy.gif'\n];","const stations = [\n    {\n        name: \"Lofi Girl\",\n        key: \"5qap5aO4i9A\",\n    },\n    {\n        name: \"Zoma tech\",\n        key: \"bmVKaAV_7-A\",\n    },\n    {\n        name: \"Chill Radio\",\n        key: \"21qNxnCS8WU\",\n    },\n    {\n        name: \"Sleepy Beats\",\n        key: \"DWcJFNfaw9c\",\n    },\n    {\n        name: \"Coffee Shop\",\n        key: \"-5KAN9_CzSA\",\n    },\n    {\n        name: \"Siloh\",\n        key: \"2atQnvunGCo\",\n    },\n    {\n        name: \"Chillhop Radio\",\n        key: \"5yx6BWlEVcY\",\n    },\n    {\n        name: \"Galaxy Walk Radio\",\n        key: \"w3j6XXB57KM\",\n    },\n    {\n        name: \"Hip-Hop Radio\",\n        key: \"MCkTebktHVc\",\n    },\n    {\n        name: \"Space Lo-Fi Radio\",\n        key: \"yXa2_m0fhzQ\",\n    },\n    {\n        name: \"Indie Radio\",\n        key: \"yGY4ZIJ7sWE\",\n    },\n];\n\nexport default stations;","import React from 'react';\nimport YouTube from 'react-youtube';\n\nfunction Player({ station }) {\n\n  const opts = {\n    vq: 'tiny',\n    width: 10,\n    height: 10,\n    playerVars: {\n      autoplay: 1,\n      'origin': 'http://localhost:3000'\n    }\n  };\n  const _onReady = (event) => {\n    event.target.playVideo();\n  }\n\n  return (\n      <div>\n        {station && <YouTube videoId={station.key} opts={opts} onReady={_onReady} style={{ display: 'none'}} />}\n      </div>\n  )\n}\n\nexport default Player\n","/**\n * I have used Yates-shuffle algo for suffling the list.\n * https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle\n * @param {Array} list\n * @returns {Array} Suffled-array\n */\nexport function suffleList(list) {\n    let i = list.length;\n\n    while (i !== 0) {\n        let rand = Math.floor(Math.random() * (i - 1)) + 1;\n        let swap = list[i - 1];\n        list[i - 1] = list[rand];\n        list[rand] = swap;\n        --i;\n    };\n\n    return list;\n}\n\n/**\n * It fetches the quotes from an public api and returns\n * one random quote from the fetched list of quote.\n * @returns {Object}\n */\nexport async function fetchQuote() {\n    const request = await fetch(\"https://type.fit/api/quotes\");\n    const quotes = await request.json();\n    return quotes[Math.floor(Math.random() * quotes.length - 1) + 1];\n}","import \"./App.css\";\nimport styled from \"styled-components\";\nimport { useState, useEffect } from \"react\";\nimport gifsData from \"./data\";\nimport stations from \"./data/Stations\";\nimport Player from \"./components/Player\";\n\nimport { fetchQuote, suffleList } from './Utils/HelperFunctions';\nimport React from \"react\";\n\n\nfunction App() {\n  const [quote, setQuote] = useState();\n  const [theme, setTheme] = useState(gifsData);\n  const [currentTheme, setCurrentTheme] = useState();\n  const [station, setStation] = useState();\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  useEffect(() => {\n    fetchQuote().then(data => { setQuote(data.text); });\n    setTheme(suffleList(gifsData));\n    setCurrentTheme(theme[0]);\n    setStation(stations[0]);\n  }, []);\n\n  /**\n   * I'll explain later why i'm using this custom hook.\n   * @param {function} callback\n   * @param {in milliseconds} delay\n   */\n  const useInterval = (callback, delay) => {\n    const savedCallback = React.useRef();\n\n    React.useEffect(() => {\n      savedCallback.current = callback;\n    }, [callback]);\n\n    React.useEffect(() => {\n      function tick() {\n        savedCallback.current();\n      }\n      if (delay !== null) {\n        let id = setInterval(tick, delay);\n        return () => clearInterval(id);\n      }\n    }, [delay]);\n  };\n\n  useInterval(() => {\n    setCurrentTheme(theme[currentIndex]);\n    if (theme.length === currentIndex) {\n      setCurrentIndex(0);\n    } else {\n      setCurrentIndex(currentIndex+1)\n    }\n  }, 6000);\n\n  const changeStation = (e) => {\n    const value = e.target.value;\n    const station = stations.find((obj) => {\n      return obj.key === value;\n    });\n\n    setStation(station);\n  };\n\n  return (\n    <>\n      <Player station={station} />\n      <div className=\"app\">\n        <Main>\n          <img src={`assets/${currentTheme}`} alt=\"\" />\n          {/* <img src={`assets/comition_sky_left_to_right.gif`} alt=\"\" /> */}\n        </Main>\n        <Section>\n          {/* <span>\n          <svg fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"> <path d=\"M4 6h16v2H4V6zm0 5h16v2H4v-2zm16 5H4v2h16v-2z\" fill=\"currentColor\"/> </svg>\n          </span> */}\n          <div>\n            <p id=\"heading\">Lo-Fi Radio</p>\n            <p id=\"quote\">{quote}</p>\n            {/* <p style={{ textTransform: \"uppercase\" }}>{station.name}</p> */}\n            <select name=\"cars\" id=\"cars\" onChange={changeStation}>\n              {stations &&\n                stations.map((station) => {\n                  return (\n                    <option\n                      className=\"opt\"\n                      value={station.key}\n                      key={stations.indexOf(station)}\n                    >\n                      {station.name}\n                    </option>\n                  );\n                })}\n            </select>\n          </div>\n        </Section>\n        <Footer className=\"footer\">\n          <span>\n\n          </span>\n        </Footer>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n\nconst Main = styled.div`\n  width: 100%;\n  height: 100vh;\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    object-position: center;\n    filter: brightness(70%);\n  }\n`;\n\nconst Section = styled.div`\n  span {\n    position: absolute;\n    top: 15px;\n    right: 15px;\n\n    svg {\n      width: 40px;\n      color: #f5f5f5;\n      filter: drop-shadow(2px 2px 0px rgba(0, 0, 0, 1));\n    }\n\n    button {\n      border: none;\n      font-family: \"Press Start 2P\";\n      font-weight: bold;\n      background: rgb(255 255 255 / 20%);\n      height: 30px;\n      border-radius: 5px;\n      letter-spacing: 3px;\n      color: #f5f5f5;\n      text-shadow: 2px 2px 0 #020406;\n    }\n  }\n\n  div {\n    padding: 1rem;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n    width: 80%;\n\n    p {\n      color: #f5f5f5;\n      text-shadow: 2px 2px 0 #020406;\n    }\n\n    p#heading {\n      font-size: max(3vw, 40px);\n      color: #f5f5f5;\n      text-shadow: 5px 5px 0 #020406;\n      margin-bottom: 10px;\n    }\n\n    p#quote {\n      line-height: 20px;\n    }\n\n    select {\n      font-family: \"Press Start 2P\";\n      width: 262px;\n      height: 40px;\n      padding: 5px;\n      line-height: 35px;\n      cursor: pointer;\n      box-shadow: 5px 5px 0 #020406;\n    }\n\n    select option {\n      margin: 40px;\n      background: rgba(0, 0, 0, 0.3);\n      text-shadow: 0 1px 0 rgba(0, 0, 0, 0.4);\n    }\n  }\n`;\n\nconst Footer = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  padding: 10px;\n`;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}